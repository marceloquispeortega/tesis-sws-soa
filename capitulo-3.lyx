#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% increase link area for cross-references and autoname them
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\newlength{\abc}
\settowidth{\abc}{\space}
\AtBeginDocument{%
\addto\extrasenglish{
 \renewcommand{\equationautorefname}{\hspace{-\abc}}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
 \renewcommand{\figureautorefname}{Fig.\negthinspace}
 \renewcommand{\tableautorefname}{Tab.\negthinspace}
}
}

% in case somebody want to have the label "Gleichung"
%\renewcommand{\eqref}[1]{Gleichung~(\negthinspace\autoref{#1})}

% put the link to figure floats to the beginning
% of the figure and not to its end
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% make caption labels bold
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enable calculations
\usepackage{calc}

% fancy page header/footer settings
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increase the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoid that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Implementación de Servicios Web Semánticos para Arquitecturas SOA"
\pdf_author "Lucio Marcelo Quispe"
\pdf_subject "Tesis para la obtención del grado de Máster en Tecnologías Informáticas"
\pdf_keywords "Servicios Web, Arquitectura SOA, Web Semántica, SOAP, REST, Ontologías"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry true
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch NoChildDocument
\selected 0
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rightmark
\end_layout

\end_inset


\end_layout

\begin_layout Right Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chaptername
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thechapter
\end_layout

\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
leftmark
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Enable page headers and add the chapter to the header line.
\end_layout

\end_inset


\end_layout

\begin_layout Left Footer

\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer

\end_layout

\begin_layout Chapter
Modelando Servicios Web Semánticos para SOA
\end_layout

\begin_layout Standard
En este capítulo se presenta el modelado de SWS en función a la Arquitectura
 de Sistema descrita en la Figura 3.1.
 En ella se observa cada uno de los componentes creados para obtener una
 arquitectura SOA con soporte semántico.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-1_arquitectura-sws.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Arquitectura del Sistema
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esta arquitectura se desglosa en los siguientes componentes:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Bus de Servicios de Empresa (Enterprise Service Bus)
\series default
\shape default
: Proporciona una capa de abstracción construida sobre la implementación
 de un sistema de mensajes de empresa para intercomunicar a cada uno de
 los componentes del sistema.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Capa de abstracción: es una forma de ocultar los detalles de implementación
 de ciertas funcionalidades
\end_layout

\end_inset

Un ESB no implementa en sí mismo una arquitectura SOA, sino que proporciona
 las características mediante las cuales sí se puede implementar.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Web Services
\series default
\shape default
: Representan los servicios Web disponibles en el sistema.
 Servicios que son publicados en el registro UDDI e invocados por aplicaciones
 y usuarios.
 En el caso de la arquitectura propuesta, los servicios están implementados
 en tecnologías SOAP y REST.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
UDDI
\series default
\shape default
: Representa el catálogo de servicios Web.
 En éste se publican y descubren los servicios a través de consultas con
 el estándar SPARQL a la ontología OWL-S, que utilizando SDB
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
SDB: A SPARQL Database for Jena.
 URL: 
\begin_inset CommandInset href
LatexCommand href
target "http://openjena.org/SDB/"

\end_inset


\end_layout

\end_inset

 reside en una base de datos MySQL.
 Para ello, UDDI utiliza servicios Web como 
\series bold
\shape italic
Discovery
\series default
\shape default
, para descubrir los servicios; y 
\series bold
\shape italic
Publisher
\series default
\shape default
, para publicar los mismos.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
SWS Activities
\series default
\shape default
: Son las actividades necesarias para completar una infraestructura de SWS.
 
\series bold
\shape italic
Locator
\series default
\shape default
, es el servicio que localiza la referencia de un servicio en base a una
 solicitud; y 
\series bold
\shape italic
Composer
\series default
\shape default
, es el servicio encargado de la composición.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Requests Applications/Users
\series default
\shape default
: Son todas aquellas aplicaciones o usuarios que realizan solicitudes, tanto
 al registro UDDI como a las actividades de los SWS.
\end_layout

\begin_layout Section
Publicación y Descubrimiento de Servicios Web Semánticos
\end_layout

\begin_layout Subsection
El estándar UDDI y los servicios sintácticos
\end_layout

\begin_layout Standard
UDDI es una iniciativa industrial abierta e impulsada por la OASIS.
 Considerado como un registro público diseñado para almacenar de forma estructur
ada información sobre empresas y los servicios que éstas ofrecen.
 A través de UDDI, se puede publicar y descubrir información de una empresa
 y de sus servicios.
 Se puede utilizar sistemas taxonómicos estándar para clasificar estos datos
 y poder encontrarlos posteriormente en función de la categorización.
 
\end_layout

\begin_layout Standard
A través de un conjunto de llamadas a API XML basadas en SOAP, se puede
 interactuar con UDDI, tanto en tiempo de diseño como de ejecución, para
 descubrir datos técnicos de los servicios que permitan invocarlos y utilizarlos.
 De este modo, UDDI sirve como infraestructura para una colección de software
 basado en servicios Web.
 
\end_layout

\begin_layout Standard

\shape italic
UDDI Working Group and Advisors Group
\shape default
 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.uddi.org"

\end_inset

.
\end_layout

\end_inset

, que en principio estaba conformada por empresas como Microsoft, IBM, Sun,
 Oracle, Compaq, Hewlett Packard, Intel y SAP entre otras más; es una organizaci
ón que trabaja en la especificación UDDI.
 La última revisión es la 3.0.2 que fue publicada en octubre del 2004 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://uddi.org/pubs/uddi_v3.htm"

\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
En su momento, IBM, Microsoft, HP y SAP, proporcionaban registros públicos
 de UDDI, para que las empresas publiquen sus servicios.
 Actualmente estos registros ya no se encuentran disponibles.
 Sin embargo, existen infraestructuras UDDI como: 
\end_layout

\begin_layout Itemize

\shape italic
Windows Server
\shape default
, que desde su versión 2003 incluye gratuitamente un servidor para implementar
 directorios UDDI en organizaciones 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.microsoft.com/spain/windowsserver2003/technologies/idm/uddi/default.aspx"

\end_inset

.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize

\shape italic
jUDDI
\shape default
 de 
\shape italic
Apache Software Foundation
\shape default
 que funciona con 
\shape italic
Apache Tomcat
\shape default
 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://juddi.apache.org/"

\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\shape italic
Novell Nsure UDDI Server
\shape default
 de la 
\shape italic
Novell
\shape default
 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.novell.com/developer/ndk/novell_nsure_uddi_server.html"

\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Para el desarrollo de los primeros prototipos semánticos propuestos en este
 trabajo, se tuvo que realizar un estudio minucioso de la funcionalidad
 con la que cuenta el estándar UDDI.
 En la Figura 3.2 se describe el funcionamiento de un registro UDDI, desde
 la publicación del servicio hasta su descubrimiento.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-2_funcionamiento_uddi.eps
	scale 76

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Funcionamiento de un Registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Básicamente son dos las API's (
\shape italic
Application Programming Interface
\shape default
) que están definidas en la especificación UDDI: 
\shape italic
API Publishing
\shape default
, para la publicación; y la 
\shape italic
API inquiry
\shape default
, para el descubrimiento de servicios.
 Cada API contiene un conjunto de funciones que se pueden invocar mediante
 programación, el objetivo de estas funciones es generar mensajes en XML
 a través del protocolo SOAP.
 
\end_layout

\begin_layout Subsubsection
Publicación de Servicios
\end_layout

\begin_layout Standard
Para la publicación de servicios Web UDDI utiliza la 
\series bold
\shape italic
API Publishing
\series default
\shape default
, que contiene un conjunto de funciones utilizadas para crear, almacenar,
 o actualizar información localizada en un registro UDDI.
 
\end_layout

\begin_layout Standard
Todas las funciones de esta API requieren autorización de acceso.
 Para esto se solicita un token de autorización al UDDI utilizando la 
\series bold
\shape italic
API Security Policy
\series default
\shape default
.
 
\end_layout

\begin_layout Standard
A continuación se listan cada una de las funciones de publicación: 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
add_publisherAssertions
\series default
\shape default
: Permite añadir relaciones entre proveedores de servicio.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_assertionStatusReport
\series default
\shape default
: Informa del estado de las relaciones.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_publisherAssertions
\series default
\shape default
: Recupera las relaciones del proveedor.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
set_publisherAssertions
\series default
\shape default
: Actualiza las relaciones del proveedor.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
delete_publisherAssertions
\series default
\shape default
: Elimina las relaciones especificadas.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_registeredInfo
\series default
\shape default
: Resume los proveedores de servicios y los tModels (modelos técnicos).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
save_business
\series default
\shape default
: Publica un proveedor de servicios.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
save_service
\series default
\shape default
: Publica un servicio.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
save_binding
\series default
\shape default
: Publica los detalles técnicos de un servicio.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
save_tModel
\series default
\shape default
: Publica un modelo técnico.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
delete_business
\series default
\shape default
: Elimina un proveedor de servicios.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
delete_service
\series default
\shape default
: Elimina un servicio.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
delete_binding
\series default
\shape default
: Elimina los detalles técnicos de un servicio.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
delete_tModel
\series default
\shape default
: Elimina un modelo técnico.
\end_layout

\begin_layout Standard
Sin embargo, como se menciona anteriormente, para utilizar estas funciones
 se deben tener en cuenta funciones de la 
\shape italic
API Security Policy
\shape default
.
 Estas son:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_authToken
\series default
\shape default
: Obtiene un token de autorización.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
discard_authToken
\series default
\shape default
: Invalida un token de autorización.
\end_layout

\begin_layout Paragraph
Ejemplo de publicación:
\end_layout

\begin_layout Standard
Para realizar la publicación de servicios, se deben seguir los siguientes
 pasos:
\end_layout

\begin_layout Enumerate
Ejecutar 
\shape italic
get_authToken
\shape default
 para obtener el token de autorización utilizado para el resto de las operacione
s (Figura 3.3).
\end_layout

\begin_layout Enumerate
Publicar la información del proveedor con 
\shape italic
save_bussiness
\shape default
 (Figura 3.4).
 A este componente se le denomina 
\shape italic
White Pages
\shape default
.
\end_layout

\begin_layout Enumerate
Publicar el 
\shape italic
tModel
\shape default
 con 
\shape italic
save_tModel
\shape default
 para almacenar metadatos sobre el servicio catalogado, orientado a facilitar
 las búsquedas (Figura 3.5).
 Este componente es el 
\shape italic
Yellow Pages
\shape default
.
\end_layout

\begin_layout Enumerate
Publicar la información del servicio con 
\shape italic
save_service
\shape default
 y asociarlo con la localización del recurso (
\shape italic
bindingTemplate
\shape default
).
 El mensaje SOAP se compondrá con el 
\shape italic
businessKey
\shape default
 y el 
\shape italic
tModelKey
\shape default
 obtenidos en los pasos anteriores (Figura 3.6).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-3-1_authtoken.eps

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-3-2_authtoken.eps

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Solicitud de token de autorización al registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-4-1_publicar_proveedor.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-4-2_publicar_proveedor.eps

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un proveedor en el registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-5-1_publicar_tmodel.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-5-2_publicar_tmodel.eps

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un tModel en el registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-6-1_publicar_servicio.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-6-2_publicar_servicio.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un Servicio Web en el registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En las figuras anteriores se realiza la publicación de un proveedor de servicio
 denominado UPNA, y de un servicio Web en SOAP, referido a la consulta del
 tiempo meteorológico.
\end_layout

\begin_layout Subsubsection
Descubrimiento de Servicios
\end_layout

\begin_layout Standard
Para el descubrimiento de servicios Web, se utiliza la 
\series bold
\shape italic
API Inquiry
\series default
\shape default
, que contiene un conjunto de funciones para descubrir los servicios y proveedor
es publicados en el registro UDDI.
 Las funciones de esta API son:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
find_business
\series default
\shape default
: Permite buscar proveedores de servicios.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
find_service
\series default
\shape default
: Permite buscar servicios.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
find_binding
\series default
\shape default
: Permite buscar los detalles técnicos de un servicio.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
find_tModel
\series default
\shape default
: Permite buscar un modelo técnico.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
find_relatedBusinesses
\series default
\shape default
: Permite buscar las relaciones de un proveedor.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_businessDetail
\series default
\shape default
: Obtiene los detalles de un proveedor a partir de su clave.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_serviceDetail
\series default
\shape default
: Obtiene los detalles de un servicio a partir de su clave.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_bindingDetail
\series default
\shape default
: Obtiene los detalles técnicos de un servicio a partir de su clave.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_tModelDetail
\series default
\shape default
: Obtiene los detalles del modelo técnico a partir de su clave.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
get_operationalInfo
\series default
\shape default
: Obtiene la información operacional de un registro en el UDDI.
\end_layout

\begin_layout Paragraph
Ejemplo de descubrimiento:
\end_layout

\begin_layout Standard
La Figura 3.7 describe una búsqueda de todos los proveedores registrados;
 y la Figura 3.8, la búsqueda de un servicio en especifico a partir de su
 clave.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-7-1_busqueda_proveedores.eps
	scale 85

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-7-2_busqueda_proveedores.eps
	scale 85

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Búsqueda de todos los proveedores en el registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-8-1_detalle_servicio.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-8-2_detalle_servicio.eps
	scale 90
	BoundingBox 0bp 2bp 530bp 408bp
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Búsqueda de un servicio determinado en el registro UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
UDDI semántico basada en OWL-S
\end_layout

\begin_layout Standard
Hasta ahora se mostró el proceso que se realiza tradicionalmente para publicar
 y descubrir servicios Web.
 Y como se observa, aunque estos procesos cumplen correctamente con sus
 funciones, no es suficiente si la información que se maneja está registrada
 sintácticamente.
 Por esta razón, a continuación se presentan dos de las aportaciones más
 importantes de este trabajo: la publicación y el descubrimiento semántico
 de servicios Web.
\end_layout

\begin_layout Standard
Para este propósito, se ha generado un software expresado en servicios Web
 REST, que son implementados con la 
\series bold
\shape italic
API de JAVA JAX-RS
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
JAX-RS: Especificación de Sun (Oracle) para implementar servicios REST usando
 clases Java más anotaciones.
 URL: 
\begin_inset CommandInset href
LatexCommand href
target "http://jersey.java.net/"

\end_inset

.
\end_layout

\end_inset


\series default
\shape default
 y ejecutados en el 
\series bold
\shape italic
servidor
\series default
\shape default
 
\series bold
\shape italic
GlashFish 3.1
\series default
\shape default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Servidor de aplicaciones Open Source con soporte completo para Java EE 6.
 URL: 
\begin_inset CommandInset href
LatexCommand href
target "http://glassfish.java.net/"

\end_inset

.
\end_layout

\end_inset

.
 La información se procesa en una 
\series bold
\shape italic
ontología OWL-S
\series default
\shape default
, almacenada en una 
\series bold
\shape italic
base de datos MySQL
\series default
\shape default
, a través del 
\series bold
\shape italic
conector nativo JDBC
\series default
\shape default
 (
\shape italic
Java Database Connectivity
\shape default
) y el uso de 
\series bold
\shape italic
librerías de Jena
\series default
\shape default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Jena Semantic Web Framework: 
\begin_inset CommandInset href
LatexCommand href
target "http://jena.sourceforge.net/"

\end_inset

.
\end_layout

\end_inset

: 
\series bold
\shape italic
SparQL
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
SPARQL Query Language para RDF.
 URL: 
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/rdf-sparql-query/"

\end_inset

.
\end_layout

\end_inset


\series default
\shape default
 y 
\series bold
\shape italic
SparQL/Update
\series default
\shape default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
SPARQL 1.1 Update.
 URL: 
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/sparql11-update/."

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-9_esquema_servicios_REST.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Esquema de componentes de software del UDDI semántico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para su mejor entendimiento, el software se describe en diagramas de clases
 que se presenta en el Anexos del documento.
\end_layout

\begin_layout Subsubsection
Publicación semántica de Servicios
\end_layout

\begin_layout Standard
UDDI en la publicación sintáctica, hace uso de un conjunto de funciones
 de la API Publishing.
 En el caso de este prototipo, se propone un conjunto de servicios Web desarroll
ados con REST, para realizar la publicación de servicios de acuerdo a su
 semántica.
\end_layout

\begin_layout Standard
El proceso que se debe seguir para publicar servicios es el siguiente:
\end_layout

\begin_layout Enumerate
Publicar los datos del proveedor del servicio, utilizando el servicio 
\series bold
\shape italic
ActorsResource
\series default
\shape default
 (Figura 3.10).
\end_layout

\begin_layout Enumerate
Publicar la entidad del servicio junto a los identificadores de sus tres
 partes principales: 
\series bold
\shape italic
Profile
\series default
\shape default
, 
\series bold
\shape italic
Process
\series default
\shape default
 y 
\series bold
\shape italic
Grounding
\series default
\shape default
.
 Se utiliza para esto el servicio 
\series bold
\shape italic
ServicesResource
\series default
\shape default
 (Figura 3.11).
\end_layout

\begin_layout Enumerate
Publicar los detalles del perfil del servicio, 
\series bold
\shape italic
Profile
\series default
\shape default
, utilizando el servicio 
\series bold
\shape italic
ProfilesResource
\series default
\shape default
 (Figura 3.12).
\end_layout

\begin_layout Enumerate
Publicar los detalles del funcionamiento del servicio, 
\series bold
\shape italic
Process
\series default
\shape default
, utilizando el servicio 
\series bold
\shape italic
ProcessesResource
\series default
\shape default
 (Figura 3.13).
\end_layout

\begin_layout Enumerate
Publicar los detalles de implementación del servicio, 
\series bold
\shape italic
Grounding
\series default
\shape default
, utilizando el servicio 
\series bold
\shape italic
GroundingsResource
\series default
\shape default
 (Figura 3.14).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-10-1_publicacion_proveedor.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-10-2_publicacion_proveedor.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un proveedor de servicios en el UDDI Semántico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-11-1_publicacion_servicio.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-11-2_publicacion_servicio.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un servicio en el UDDI Semántico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-12-1_publicacion_profile.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-12-2_publicacion_profile.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un profile de servicio en el UDDI Semántico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-13-1_publicacion_process.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-14-2_publicacion_grounding.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un process de servicio en el UDDI Semántico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-14-1_publicacion_grounding.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-14-2_publicacion_grounding.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Publicación de un grounding de servicio en el UDDI Semántico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las figuras anteriores detallan la publicación de un proveedor más un servicio
 Web referido a la validación de una tarjeta de crédito.
\end_layout

\begin_layout Standard
En cada uno de los procesos descritos en las figuras anteriores se aprecia;
 por un lado la solicitud al servicio en formato XML, que incluye todas
 las propiedades del recurso; y por otro, la respuesta a dicha solicitud
 que incluye el estado de respuesta (
\series bold
\shape italic
201: Created
\series default
\shape default
), el servidor bajo el cuál se ejecuta y la localización del nuevo recurso.
\end_layout

\begin_layout Standard
Para la creación de recursos, se utiliza el método HTTP POST, qué invoca
 a los métodos creados en clases de java: 
\series bold
\shape italic
post()
\series default
\shape default
 y 
\series bold
\shape italic
createEntity()
\series default
\shape default
.
 El método 
\series bold
\shape italic
post()
\series default
\shape default
, consume el recurso en formato XML y JSON; y procede a invocar al método
 
\series bold
\shape italic
createEntity()
\series default
\shape default
, que a través de consultas en formato SparQL, será el encargado de procesar
 esta solicitud utilizando la librería SparQL/Update (Figura 3.15).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-15-1_metodo_create.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Método post()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-15-2_metodo_create.eps
	scale 86

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Método createEntity()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Métodos para crear un recurso con el Servicio ActorsResource
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A su vez, cada servicio cuenta también con métodos para listar recursos
 (Figura 3.17), leer (Figura 3.18) o borrar uno específico (Figura 3.19).
 Éstas acciones representan las operaciones CRUD asociadas a los métodos
 GET y DELETE de HTTP.
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-16-1_metodo_list.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Método list()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-16-2_metodo_list.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Método getEntities()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Métodos para listar recursos con el servicio ActorsResource
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-17-1_metodo_read.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Método read()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-17-2_metodo_read.eps
	scale 88

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Método getActor()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Métodos para leer un recurso con el servicio ActorResource
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-18-1_metodo_delete.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Método delete()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-18-2_metodo_delete.eps
	scale 88

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Método deleteEntity()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Métodos para eliminar un recurso con el servicio ActorResource
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Descubrimiento semántico de Servicios
\end_layout

\begin_layout Standard
Para el descubrimiento de servicios el UDDI sintáctico hace uso de servicios
 propuestos en la API Inquiry.
 Sin embargo, en este trabajo se propone un conjunto de servicios que cumplen
 con las mismas funciones de la API y abarcan otras más.
\end_layout

\begin_layout Standard
Los métodos que se proponen en el prototipo son los siguientes: 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getContactInformation
\series default
\shape default
: Obtiene proveedores de servicio de acuerdo a su 
\shape italic
id
\shape default
 y/o 
\shape italic
nombre
\shape default
 (Figura 3.19).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServiceProfile
\series default
\shape default
: Obtiene los perfiles (profiles) de los servicios por el 
\shape italic
id
\shape default
 de servicio.
 Permite además filtrar el resultado en función a tres tipos de información:
 información básica, funcionalidad y características del servicio (Figura
 3.20).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServiceCategory
\series default
\shape default
: Obtiene una categoría de servicios en función a su 
\shape italic
id
\shape default
 y/o 
\shape italic
nombre
\shape default
 (Figura 3.21).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServiceFeatures
\series default
\shape default
: Obtiene las características de un servicio en función a su 
\shape italic
id
\shape default
 (Figura 3.22).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getInputsOfService
\series default
\shape default
: Obtiene los parámetros de entrada de un servicio en función a su 
\shape italic
id
\shape default
 (Figura 3.23).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getOutputsOfService
\series default
\shape default
: Obtiene los parámetros de salida de un servicio en función a su 
\shape italic
id
\shape default
 (Figura 3.24).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getPreconditionsOfService
\series default
\shape default
: Obtiene las condiciones previas de un servicio en función a su 
\shape italic
id
\shape default
 (Figura 3.25).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getResultOfService
\series default
\shape default
: Obtiene el resultado de un servicio proporcionando como parámetro su 
\shape italic
id
\shape default
 (Figura 3.26).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-19_metodo_getcontactinformation.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getContactInformation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-20_metodo_getserviceprofile.eps
	scale 76

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServiceProfile
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la Figura 3.20 se observan las tres partes del servicio debido a que todos
 los parámetros del filtrado son verdaderos.
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-21_metodo_getservicecategory.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServiceCategory
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-22_metodo_getservicefeatures.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServiceFeatures
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-23_metodo_getinputsofservice.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getInputsOfService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-24_metodo_getoutputsofservice.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getOutputsOfService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-25_metodo_getpreconditionsofservice.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getPreconditionsOfService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-26_metodo_getresultofservice.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getResultOfService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las figuras anteriores describen la monitorización de las solicitudes realizadas
 por los métodos implementados.
 En estas capturas se observan las solicitudes divididas en cuatro secciones:
 1) la solicitud al servicio más los parámetros enviados, 2) el estado de
 la solicitud, 3) el timestamp y 4) la respuesta obtenida, que en este caso
 es el recurso en formato XML.
\end_layout

\begin_layout Standard
Además de descubrir servicios por los métodos ya mencionados, REST hace
 posible que los recursos se pueden navegar como si estos estuvieran dispuestos
 en directorios.
 La Figura 3.27 describe este esquema.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-27_esquema_recursos_uddi.eps
	scale 85

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Esquema de recursos UDDI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En cada directorio se listan, utilizando el método HTTP GET, todos los recursos
 en formato XML o JSON.
 Así mismo, para acceder o eliminar un recurso, se utilizan los métodos
 HTTP GET o DELETE respectivamente hacia el Id del recurso.
\end_layout

\begin_layout Subsection
Comparativa entre el estándar UDDI y los prototipos semánticos 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="block" valignment="top" width="48col%">
<column alignment="block" valignment="top" width="48col%">
<row>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
UDDI Sintáctico
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Prototipos Semánticos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Para publicar servicios se necesita una autorización previa.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No se menciona esta funcionalidad ya que REST sugiere utilizar HTTP Authenticati
on bajo HTTPS.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El servicio y sus propiedades se publican en un sólo registro.
 Los detalles y modelo técnico en otros dos.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El servicio se publica en cuatro registros o recursos.
 Uno el servicio y los otros tres: profile, process y grounding.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Para el descubrimiento de servicios se utiliza la API Inquiry, que es un
 servicio que contiene un conjunto de métodos.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Utilizan métodos que permiten descubrir servicios como si estos fueran recursos
 disponibles en directorios.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El descubrimiento de los servicios se lo realiza en función a búsquedas
 en pocas propiedades.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Realizan búsquedas más precisas en función a la relación de las propiedades
 de los servicios en la ontología.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Utiliza pocas propiedades y aspectos técnicos, debido a que registros como
 el tModel y el binding se limitan a almacenar referencias del servicio.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Utilizan más propiedades para describir el servicio.
 Por ejemplo están la funcionalidad (parámetros y resultados) y las característi
cas del servicio (políticas, tiempo de respuesta, disponibilidad, etc.),
 entre otros.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sólo se puede publicar y descubrir servicios basados en SOAP.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si bien están implementados en REST, permiten publicar y descubrir servicios
 basados en SOAP y REST.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Las solicitudes se las realiza en base a mensajes enviados en formato XML.
 
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sin embargo, con REST las solicitudes soportan formatos como XML y JSON.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Comparativa entre el estándar UDDI sintáctico y los prototipos semánticos
 propuestos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Localización de Servicios Web Semánticos
\end_layout

\begin_layout Standard
Los dos anteriores prototipos, aunque juntos conforman una mejor alternativa
 frente al UDDI tradicional, no aprovechan a plenitud el potencial de la
 semántica incorporada.
 Por lo que, a continuación se describen métodos de un tercer prototipo
 que nos permitirá realizar la localización de los servicios en base a su
 semántica.
 Para así utilizarlos inmediatamente, ya sea en tiempo de diseño como de
 ejecución.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByDescription
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función al nombre
 o a la descripción proporcionada (Figura 3.28).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByFeature
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función a alguna
 característica proporcionada.
 Por ejemplo, podría ser la disponibilidad, política o tiempo de respuesta,
 entre otros (Figura 3.29).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByBusiness
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función al id del
 negocio o proveedor, enviado como parámetro (Figura 3.30).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByCategory
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función al id de
 una categoría de servicio (Figura 3.31).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByInputs
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función a los parámetros
 de entrada proporcionados en formato XML o JSON (Figura 3.32).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByOutputs
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función a los parámetros
 de salida proporcionados en formato XML o JSON (Figura 3.33).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByPreconditions
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función a las condicione
s previas proporcionadas en formato XML o JSON (Figura 3.34).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getServicesByResult
\series default
\shape default
: Obtiene una lista de servicios con sus referencias en función a un resultado
 enviado como parámetro (Figura 3.35).
\end_layout

\begin_layout Standard
Obsérvese que en las pruebas realizadas a los métodos de este prototipo,
 los servicios producen y consumen recursos en formato JSON.
 Esto es tan sólo para demostrar que REST soporta también éste formato,
 que a diferencia de XML, consume menos ancho de banda.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-28_metodo_getServicesByDescription.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByDescription
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-29_metodo_getServicesByFeature.eps
	scale 86

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByFeature
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-30_metodo_getServicesByBusiness.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByBusiness
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-31_metodo_getServicesByCategory.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByCategory
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-32_metodo_getServicesByInputs.eps
	scale 86

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByInputs
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-33_metodo_getServicesByOutputs.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByOutputs
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-34_metodo_getServicesByPreconditions.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByPreconditions
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-35_metodo_getServicesByResult.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getServicesByResult
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Composición de Servicios Web Semánticos
\end_layout

\begin_layout Standard
La composición de servicios es una estrategia tecnológica muy importante
 para ambientes SOA.
 En ella, los programas de usuario y servicios Web interaccionan para obtener
 procesos de negocio en función a la composición de dos o más servicios.
\end_layout

\begin_layout Subsection
BPEL y la composición sintáctica
\end_layout

\begin_layout Standard
El Lenguaje de Ejecución de Procesos de Negocio (BPEL) es una tecnología
 utilizada para componer servicios Web.
 En esencia, este lenguaje se utiliza para el control centralizado de la
 invocación de diferentes servicios Web, y con cierta lógica de negocio
 añadida, permite la programación a gran escala.
 Es decir, una definición de un proceso BPEL utiliza uno o más servicios
 descritos por interfaces WSDL, para proporcionar la descripción del comportamie
nto y las interacciones de las instancias de un proceso.
 En la Figura 3.36 se puede observar el esquema conceptual de un proceso
 de negocio en BPEL.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-36_proceso_bpel.eps
	scale 62

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Esquema conceptual de un proceso BPEL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Relación con otros estándares
\end_layout

\begin_layout Standard
La última especificación de BPEL es la 2.0, fue lanzada en Abril de 2007
 como 
\series bold
\shape italic
WS-BPEL
\series default
\shape default
 (
\series bold
\shape italic
BPEL for Web Services
\series default
\shape default
) para indicar la gran diferencia que existe entre la versión 1.1 y la 2.0
 de éste lenguaje.
\end_layout

\begin_layout Standard
Como se observa en la Figura 3.37 
\begin_inset CommandInset citation
LatexCommand cite
key "moorthy06"

\end_inset

, BPEL es un lenguaje de 
\begin_inset Quotes eld
\end_inset

alto nivel
\begin_inset Quotes erd
\end_inset

, el cual se encuentra en la capa más alta, capa de procesos.
 Utiliza WSDL como interfaz para definir las operaciones del proceso de
 negocios y es ejecutado como un servicio Web con la ayuda de un motor de
 ejecución.
 Para la transmisión de mensajes utiliza SOAP como protocolo, y los tipos
 de mensajes y parámetros se validan a través de XML Schema.
 Por último, los datos se transmiten completamente en formato XML.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-37_estandares_bpel.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Relación con otros estándares
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Componentes de la Arquitectura 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-38_arquitectura_bpel.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Componentes de la arquitectura BPEL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la Figura 3.38, obtenida de 
\begin_inset CommandInset citation
LatexCommand cite
key "moorthy06"

\end_inset

, se describen los tres componentes principales de la arquitectura BPEL:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Diseñador BPEL
\series default
\shape default
: Es una aplicación con interfaz gráfica la cual es usada para definir el
 proceso de negocio, el cual debe ser independiente de la aplicación.
 Éste diseñador es utilizado por el experto de negocios que conoce el flujo
 de procesos de negocios de la empresa.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Plantilla de flujo de proceso
\series default
\shape default
: Es un archivo con extensión 
\shape italic
.bpel
\shape default
 el cual corresponde completamente a una especificación BPEL.
 El Diseñador BPEL genera la plantilla de flujo de proceso a tiempo de diseño
 y ésta es ejecutada por el Motor BPEL.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
Motor BPEL
\series default
\shape default
: Es la aplicación encargada de ejecutar cualquier plantilla de proceso
 de negocio compatible con un estándar BPEL.
 
\end_layout

\begin_layout Subsubsection
Desventajas e inconvenientes 
\end_layout

\begin_layout Standard
Pese a las ventajas que ofrecen BPEL y la composición sintáctica, se hacen
 presente algunas dificultades como:
\end_layout

\begin_layout Itemize
Los procesos de negocio se definen del lado del usuario final o de la aplicación
 con la que se diseña.
\end_layout

\begin_layout Itemize
Sólo soporta servicios Web implementados con SOAP.
\end_layout

\begin_layout Itemize
Los servicios representados por una interfaz WSDL/BPEL presentan complejidad
 en el momento de publicarlos en un registro UDDI.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Otro aspecto a tener en cuenta es cómo dar de alta un servicio representado
 por una interfaz WSDL y un proceso descrito en una hoja BPEL en un registro
 UDDI.
 Para ello debemos encontrar una correspondencia adecuada entre los lenguajes
 WSDL/BPEL y UDDI.
 En las figuras 4 y 5 se puede observar el esquema de la correspondencia
 entre una hoja BPEL y WSDL [6][7] en una estructura de elementos UDDI.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Se necesita contar con un motor y librerías extras que ejecuten el servicio
 Web compuesto.
\end_layout

\begin_layout Subsection
Composición basada en OWL-S
\end_layout

\begin_layout Standard
En función a las dificultades señaladas anteriormente se presenta un último
 prototipo para cubrir estas carencias.
 
\end_layout

\begin_layout Standard
Este prototipo denominado 
\series bold
\shape italic
compositor
\series default
\shape default
 cuenta con métodos que proporcionan una mejor información acerca del proceso
 de composición.
 Incorpora la semántica necesaria para que la composición sea descrita en
 una ontología, pudiendo ser definida en un registro UDDI de manera sencilla
 y principalmente con soporte heterogéneo, para que las composiciones incluyan
 servicios SOAP y REST indistintamente.
\end_layout

\begin_layout Standard
Métodos del compositor:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
setProcessCompositionDetails
\series default
\shape default
: Publica el detalle de un proceso de negocio, definido en una composición
 de servicios, qué describe las 
\shape italic
ControlConstruct
\shape default
 (estructuras de control), la invocación de servicios y el paso de parámetros
 utilizados.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getProcessCompositionDetails
\series default
\shape default
: Obtiene el detalle de la composición de servicios publicado por el anterior
 método.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getControlConstructsByProcess
\series default
\shape default
: Obtiene las 
\shape italic
ControlConstruct
\shape default
 utilizadas por un determinado proceso.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getPropertiesOfControlConstruct
\series default
\shape default
: Obtiene las propiedades de una 
\shape italic
ControlConstruct
\shape default
.
 Las propiedades pueden ser distintas dependiendo del tipo de estructura.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
getComponentsOfControlConstruct
\series default
\shape default
: Obtiene los procesos utilizados dentro de una 
\shape italic
ControlConstruct
\shape default
.
\end_layout

\begin_layout Subsubsection
Ejemplo de publicación de un proceso de negocio
\end_layout

\begin_layout Standard
Para detallar más claramente los métodos implementados, en la Figura 3.39
 se presenta un ejemplo de proceso de negocio que posteriormente es descrito
 semánticamente en la Figura 3.40.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-39_proceso_negocio_venta_libros.eps
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Proceso de negocio para la venta de libros online
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los detalles del proceso de negocio son los siguientes:
\end_layout

\begin_layout Itemize
La orden de venta inicia aportando el ID de cliente registrado que realiza
 la compra, el ISBN del libro que adquiere, el número de unidades y el precio
 por unidad.
 
\end_layout

\begin_layout Itemize
Se comprueba en almacén que haya stock suficiente para el pedido.
 En su defecto el proceso finaliza y lo notifica, para así ofrecer alternativas
 al cliente y no perder la oportunidad de venta.
\end_layout

\begin_layout Itemize
Si hay unidades suficientes, se invoca al sistema de pago online que tenemos
 contratado con nuestra entidad financiera.
 La entidad ya dispone de los datos de los clientes registrados, por lo
 que se encarga de hacer el trámite necesario y asegurar el pago.
\end_layout

\begin_layout Itemize
Finalmente se emite la orden de envío a una empresa de mensajería y se facilita
 un identificador de pedido (Id de factura) para que lo recoja en almacén
 y lo reparta.
\end_layout

\begin_layout Itemize
El resultado del proceso será una confirmación de la venta realizada.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-40-1_proceso_composicion_venta_libros.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solicitud
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-40-2_proceso_composicion_venta_libros.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización de solicitud y respuesta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Proceso de composición para la venta de libros online
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como siguiente paso se identifican los servicios Web que realizan las funcionali
dades concretas de cada paso del proceso.
 En este caso son:
\end_layout

\begin_layout Itemize
Servicio Web del almacén: o comprobarStock, espera el ISBN del libro y las
 unidades de compra, y responde si existe o no stock suficiente.
\end_layout

\begin_layout Itemize
Servicio Web del sistema de pago online: o facturar, con un idCliente y
 una cuantía, devuelve un código de factura.
\end_layout

\begin_layout Itemize
Servicio Web de la empresa de mensajería: o enviarProducto, con el identificador
 de empresa y el pedido a servir, responde con el tiempo en días estimado
 de reparto.
 
\end_layout

\begin_layout Standard
Cabe destacar que estos servicios pueden estar implementados en SOAP o REST.
\end_layout

\begin_layout Standard
Para la publicación de los detalles de la composición se utiliza el método
 
\shape italic
setProcessCompositionDetails
\shape default
 (Figura 3.40).
 Y para obtener el mismo detalle, el método 
\shape italic
getProcessCompositionDetails
\shape default
, enviando como parámetro el id del proceso.
\end_layout

\begin_layout Standard
También se pueden utilizar otros métodos como 
\shape italic
getControlConstructsByProcess
\series bold
, 
\series default
getPropertiesOfControlConstruct
\shape default
 y 
\shape italic
getComponentsOfControlConstruct
\shape default
, para obtener consultas específicas acerca de la composición.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-41_metodo_getControlConstructsByProcess.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getControlConstructsByProcess
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-42_metodo_getPropertiesOfControlConstruct.eps
	scale 85

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getPropertiesOfControlConstruct
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/3-43_metodo_getComponentsOfControlConstruct.eps
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Monitorización del protocolo HTTP para el método getComponentsOfControlConstruct
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Comparativa entre composición sintáctica y semántica
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="block" valignment="top" width="45col%">
<column alignment="block" valignment="top" width="45col%">
<row>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Composición Sintáctica
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Composición Semántica
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Los procesos de negocio se definen del lado del usuario final.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Los procesos de negocio se definen y almacenan en una ontología junto con
 los servicios Web.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sólo soporta servicios Web implementados en SOAP.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soporta servicios Web implementados en SOAP y REST.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Complejos de publicarlos en un registro UDDI.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Son fáciles de publicar, gracias a la semántica incorporada.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cuenta con un motor de composición.
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No tiene un motor pero se le puede implementar.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El proceso de composición, sus actividades y propiedades, no son transparentes
 ya que sólo el usuario que lo diseña puede acceder y conocer el mismo.
 
\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Todo el proceso de composición queda transparente y publicado en el registro
 UDDI.
 Quedando visible y para consultar las estructuras de control, la invocación
 de servicios, y los parámetros utilizados.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Comparativa entre composición sintáctica y semántica
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Standard
En este capítulo se presentan cuatro prototipos semánticos que nos permiten
 realizar procesos de publicación, descubrimiento, localización y composición
 de servicios a través de un registro semántico.
 Lo cual nos permite, en comparación al UDDI y a las actividades SOA tradicional
es, obtener información de servicios más detallada, consultas más precisas,
 y un registro heterogéneo que soporta a la vez tecnologías SOAP y REST.
\end_layout

\begin_layout Standard
En cuanto a la tecnología utilizada; todos los prototipos se han implementado
 en REST, utilizando Java y Jena.
 Las pruebas funcionales realizadas a éstos indican que los procesos son
 más provechosos, debido a que las consultas e inferencias sobre las ontologías,
 en función a relaciones y restricciones entre clases y propiedades, nos
 permiten obtener mejores resultados.
\end_layout

\begin_layout Standard
En resumen, los cuatro prototipos: 
\shape italic
publisher
\shape default
, 
\shape italic
discovery
\shape default
, 
\shape italic
locator
\shape default
 y 
\shape italic
composer
\shape default
; implementan métodos que tienen las mismas funcionalidades de un registro
 UDDI y de actividades SOA.
 Y aunque éstos no satisfacen un estándar, como UDDI, nos permiten demostrar
 que la Web Semántica puede utilizarse dentro de un ambiente SOA para llegar
 a definirse Servicios Web Semánticos dentro de una ontología.
 
\end_layout

\begin_layout Standard
\begin_inset Branch NoChildDocument
status open

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "thesisExample"
options "alpha"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "custom"
width "2.5cm"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
